标题 发布时间 内容 是否被处理（1 处理 0没处理） 


总体：
栏目+具体项目+项目的时间+面向+做什么+ 做什么的时间点（具体文本中）
标题：
1.具体项目->栏目
2.面向
3.

时间：第一学期，第二学期，春季学期，秋季学期
然后看发布时间
栏目
课程：
1.具体项目
  线下课、网课、阅读经典、研读课、通识课
2.面向对象：
  本科生 研究生 毕业生
  +级数
3.操作时间：
4.做什么：选课、退课、增课、删课、开课
考试：
1.具体项目：网络考试 四六级、口语考试、计算机等级考试、补考、缓考、期末考试
2.项目时间：
3.做什么:报名、
4.考试性质：内容
毕业：
1.具体项目：毕业论文，毕业设计
1.时间
2.面向对象
开放学：
1.具体项目：开学，学期结束


一、建立索引
算法：
1.列出所有tag的高频词
2.对标题进行高频词匹配，填充tag（栏目tag根据具体项目分类），建议写成一个脚本
3.对于没有匹配到的剩下tag进行语义分析，自动填充tag内容(主要针对做什么)

做完后要求人工检查标题和项目对应情况，并且增加相应tag的高频词匹配

4.对正文内容的做什么的时间点进行语义分析，找到相关时间，并挖掘出该时间对应的事件

做完后要求人工检查改标题所在句子的对应情况

全部执行完后
所有的通知将分为两类
第一类为重要信息：
tag有
栏目+具体项目+项目的时间+面向+做什么+ 做什么的时间点（具体文本中）
第二类为非重要信息：
非重要信息无法归纳栏目

至此索引建立完毕

二、查询
根据用户需求进行查询
查询分为精确查询和模糊查询
1、精确查询
根据用户提供关键字暴力扫描每一个记录的所有标题和内容，返回有关的标题及网址
2、模糊查询
对用户的关键字进行模糊匹配
用户查询运算符+ |（优先级同级不支持括号）

查询key:
栏目、具体项目、做什么、项目的时间
查询排除信息：
已经超时的项目（主要针对非本学期）
并提供摘要（所有tag）

三、通知
1、新通知到来后
根据面向对象tag筛选后发放
2、增强订阅服务
在每个做什么的时间点的前1-2天再次发放该通知，提醒完成

